// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import RealmSwift;
@import ObjectiveC;
@import Foundation;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class RLMSchema;
@class RLMRealm;
@class RLMObjectSchema;

/**
  This class represents the ACL (Access Control List) for a record.
*/
SWIFT_CLASS("_TtC6Kinvey3Acl")
@interface Acl : RealmSwiftObject
/**
  The \code
  userId
  \endcode of the \code
  User
  \endcode used to create the record.
*/
@property (nonatomic, copy) NSString * _Nullable creator;
/**
  Specifies the list of user _ids that are explicitly allowed to read the entity.
*/
@property (nonatomic, copy) NSArray<NSString *> * _Nullable readers;
/**
  Specifies the list of user _ids that are explicitly allowed to modify the entity.
*/
@property (nonatomic, copy) NSArray<NSString *> * _Nullable writers;
/**
  Default Constructor.
*/
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/**
  WARNING: This is an internal initializer not intended for public use.
  :nodoc:
*/
- (nonnull instancetype)initWithValue:(id _Nonnull)value schema:(RLMSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
/**
  WARNING: This is an internal initializer not intended for public use.
  :nodoc:
*/
- (nonnull instancetype)initWithRealm:(RLMRealm * _Nonnull)realm schema:(RLMObjectSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
/**
  WARNING: This is an internal initializer not intended for public use.
  :nodoc:
*/
+ (NSArray<NSString *> * _Nonnull)ignoredProperties;
- (nonnull instancetype)initWithValue:(id _Nonnull)value SWIFT_UNAVAILABLE;
@end

@class __KNVUser;
@class KNVMigration;
@class NSCoder;

/**
  This class provides a representation of a Kinvey environment holding App ID and App Secret. Please <em>never</em> use a Master Secret in a client application.
*/
SWIFT_CLASS_NAMED("Client")
@interface __KNVClient : NSObject <NSCoding>
/**
  Shared client instance for simplicity. Use this instance if <em>you don’t need</em> to handle with multiple Kinvey environments.
*/
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) __KNVClient * _Nonnull sharedClient;)
+ (__KNVClient * _Nonnull)sharedClient;
/**
  It holds the \code
  User
  \endcode instance after logged in. If this variable is \code
  nil
  \endcode means that there’s no logged user, which is necessary for some calls to in a Kinvey environment.
*/
@property (nonatomic, readonly, strong) __KNVUser * _Nullable activeUser;
/**
  Holds the App ID for a specific Kinvey environment.
*/
@property (nonatomic, readonly, copy) NSString * _Nullable appKey;
/**
  Holds the App Secret for a specific Kinvey environment.
*/
@property (nonatomic, readonly, copy) NSString * _Nullable appSecret;
/**
  Holds the \code
  Host
  \endcode for a specific Kinvey environment. The default value is \code
  https://baas.kinvey.com/
  \endcode
*/
@property (nonatomic, readonly, copy) NSURL * _Nonnull apiHostName;
/**
  Holds the \code
  Authentication Host
  \endcode for a specific Kinvey environment. The default value is \code
  https://auth.kinvey.com/
  \endcode
*/
@property (nonatomic, readonly, copy) NSURL * _Nonnull authHostName;
/**
  Cache policy for this client instance.
*/
@property (nonatomic) NSURLRequestCachePolicy cachePolicy;
/**
  Timeout interval for this client instance.
*/
@property (nonatomic) NSTimeInterval timeoutInterval;
/**
  App version for this client instance.
*/
@property (nonatomic, copy) NSString * _Nullable clientAppVersion;
/**
  Custom request properties for this client instance.
*/
@property (nonatomic, copy) NSDictionary<NSString *, NSString *> * _Nonnull customRequestProperties;
/**
  The default value for \code
  apiHostName
  \endcode variable.
*/
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull defaultApiHostName;)
+ (NSURL * _Nonnull)defaultApiHostName;
/**
  The default value for \code
  authHostName
  \endcode variable.
*/
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSURL * _Nonnull defaultAuthHostName;)
+ (NSURL * _Nonnull)defaultAuthHostName;
/**
  Set a different schema version to perform migrations in your local cache.
*/
@property (nonatomic, readonly) unsigned long long schemaVersion;
/**
  Set a different type if you need a custom \code
  User
  \endcode class. Extends from \code
  User
  \endcode allows you to have custom properties in your \code
  User
  \endcode instances.
*/
@property (nonatomic) SWIFT_METATYPE(__KNVUser) _Nonnull userType;
/**
  Default Value for DataStore tag
*/
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull defaultTag;)
+ (NSString * _Nonnull)defaultTag;
/**
  Enables logging for any network calls.
*/
@property (nonatomic) BOOL logNetworkEnabled;
/**
  Stores the MIC API Version to be used in MIC calls
*/
@property (nonatomic, copy) NSString * _Nullable micApiVersion;
/**
  Default constructor. The \code
  initialize
  \endcode method still need to be called after instanciate a new instance.
*/
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/**
  Constructor that already initialize the client. The \code
  initialize
  \endcode method is called automatically.
*/
- (nonnull instancetype)initWithAppKey:(NSString * _Nonnull)appKey appSecret:(NSString * _Nonnull)appSecret apiHostName:(NSURL * _Nonnull)apiHostName authHostName:(NSURL * _Nonnull)authHostName;
/**
  Initialize a \code
  Client
  \endcode instance with all the needed parameters and requires a boolean to encrypt or not any store created using this client instance.
*/
- (void)initializeWithAppKey:(NSString * _Nonnull)appKey appSecret:(NSString * _Nonnull)appSecret apiHostName:(NSURL * _Nonnull)apiHostName authHostName:(NSURL * _Nonnull)authHostName encrypted:(BOOL)encrypted schemaVersion:(unsigned long long)schemaVersion migrationHandler:(void (^ _Nullable)(KNVMigration * _Nonnull, uint64_t))migrationHandler SWIFT_METHOD_FAMILY(none);
/**
  Initialize a \code
  Client
  \endcode instance with all the needed parameters.
*/
- (void)initializeWithAppKey:(NSString * _Nonnull)appKey appSecret:(NSString * _Nonnull)appSecret apiHostName:(NSURL * _Nonnull)apiHostName authHostName:(NSURL * _Nonnull)authHostName encryptionKey:(NSData * _Nullable)encryptionKey schemaVersion:(unsigned long long)schemaVersion migrationHandler:(void (^ _Nullable)(KNVMigration * _Nonnull, uint64_t))migrationHandler SWIFT_METHOD_FAMILY(none);
/**
  Autorization header used for calls that don’t requires a logged \code
  User
  \endcode.
*/
@property (nonatomic, readonly, copy) NSString * _Nullable authorizationHeader;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder;
- (void)encodeWithCoder:(NSCoder * _Nonnull)aCoder;
@end

@protocol KNVRequest;

/**
  Class to interact with a custom endpoint in the backend.
*/
SWIFT_CLASS_NAMED("CustomEndpoint")
@interface KNVCustomEndpoint : NSObject
/**
  Executes a custom endpoint by name and passing the expected parameters.
*/
+ (id <KNVRequest> _Nonnull)execute:(NSString * _Nonnull)name params:(NSDictionary<NSString *, id> * _Nullable)params client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(NSDictionary<NSString *, id> * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6Kinvey17EmailVerification")
@interface EmailVerification : RealmSwiftObject
@property (nonatomic, readonly, copy) NSString * _Nullable status;
@property (nonatomic, readonly, copy) NSDate * _Nullable lastStateChangeAt;
@property (nonatomic, readonly, copy) NSDate * _Nullable lastConfirmedAt;
@property (nonatomic, readonly, copy) NSString * _Nullable emailAddress;
/**
  Default Constructor.
*/
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithRealm:(RLMRealm * _Nonnull)realm schema:(RLMObjectSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithValue:(id _Nonnull)value schema:(RLMSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithValue:(id _Nonnull)value SWIFT_UNAVAILABLE;
@end

@class Metadata;

/**
  Base class for entity classes that are mapped to a collection in Kinvey.
*/
SWIFT_CLASS("_TtC6Kinvey6Entity")
@interface Entity : RealmSwiftObject
/**
  Override this method and return the name of the collection for Kinvey.
*/
+ (NSString * _Nonnull)collectionName;
/**
  The \code
  _id
  \endcode property mapped in the Kinvey backend.
*/
@property (nonatomic, copy) NSString * _Nullable entityId;
/**
  The \code
  _kmd
  \endcode property mapped in the Kinvey backend.
*/
@property (nonatomic, strong) Metadata * _Nullable metadata;
/**
  The \code
  _acl
  \endcode property mapped in the Kinvey backend.
*/
@property (nonatomic, strong) Acl * _Nullable acl;
/**
  Default Constructor.
*/
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/**
  WARNING: This is an internal initializer not intended for public use.
  :nodoc:
*/
- (nonnull instancetype)initWithRealm:(RLMRealm * _Nonnull)realm schema:(RLMObjectSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
/**
  WARNING: This is an internal initializer not intended for public use.
  :nodoc:
*/
- (nonnull instancetype)initWithValue:(id _Nonnull)value schema:(RLMSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
/**
  WARNING: This is an internal initializer not intended for public use.
  :nodoc:
*/
+ (NSString * _Nullable)primaryKey;
/**
  WARNING: This is an internal initializer not intended for public use.
  :nodoc:
*/
+ (NSArray<NSString *> * _Nonnull)ignoredProperties;
- (nonnull instancetype)initWithValue:(id _Nonnull)value SWIFT_UNAVAILABLE;
@end


/**
  Class that represents a file in the backend holding all metadata of the file, but don’t hold the data itself.
*/
SWIFT_CLASS("_TtC6Kinvey4File")
@interface File : RealmSwiftObject
/**
  \code
  _id
  \endcode property of the file.
*/
@property (nonatomic, copy) NSString * _Nullable fileId;
/**
  \code
  _filename
  \endcode property of the file.
*/
@property (nonatomic, copy) NSString * _Nullable fileName;
/**
  \code
  mimeType
  \endcode property of the file.
*/
@property (nonatomic, copy) NSString * _Nullable mimeType;
/**
  \code
  _public
  \endcode property of the file, which represents if the file is accessible without need of credentials.
*/
@property (nonatomic) BOOL publicAccessible;
/**
  \code
  _acl
  \endcode property of the file.
*/
@property (nonatomic, strong) Acl * _Nullable acl;
/**
  \code
  _kmd
  \endcode property of the file.
*/
@property (nonatomic, strong) Metadata * _Nullable metadata;
/**
  Temporary download URL String of the file.
*/
@property (nonatomic, copy) NSString * _Nullable download;
/**
  Temporary download URL of the file.
*/
@property (nonatomic, copy) NSURL * _Nullable downloadURL;
/**
  Expiration data of the \code
  downloadURL
  \endcode.
*/
@property (nonatomic, copy) NSDate * _Nullable expiresAt;
/**
  Default Constructor
*/
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/**
  WARNING: This is an internal initializer not intended for public use.
  :nodoc:
*/
- (nonnull instancetype)initWithRealm:(RLMRealm * _Nonnull)realm schema:(RLMObjectSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
/**
  WARNING: This is an internal initializer not intended for public use.
  :nodoc:
*/
- (nonnull instancetype)initWithValue:(id _Nonnull)value schema:(RLMSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
/**
  Constructor of a file instance.
*/
- (nonnull instancetype)init:(SWIFT_NOESCAPE void (^ _Nonnull)(File * _Nonnull))block OBJC_DESIGNATED_INITIALIZER;
/**
  WARNING: This is an internal initializer not intended for public use.
  :nodoc:
*/
+ (NSString * _Nullable)primaryKey;
/**
  WARNING: This is an internal initializer not intended for public use.
  :nodoc:
*/
+ (NSArray<NSString *> * _Nonnull)ignoredProperties;
- (nonnull instancetype)initWithValue:(id _Nonnull)value SWIFT_UNAVAILABLE;
@end


@interface NSHTTPURLResponse (SWIFT_EXTENSION(Kinvey))
/**
  Description for the NSHTTPURLResponse including url and headers
*/
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
/**
  Description for the NSHTTPURLResponse including url, headers and the body content
*/
- (NSString * _Nonnull)description:(NSData * _Nullable)body;
@end


/**
  Protocol used to serialize and deserialize JSON objects into objects.
*/
SWIFT_PROTOCOL_NAMED("JsonObject")
@protocol KNVJsonObject
@optional
/**
  Deserialize JSON object into object.
*/
- (void)fromJson:(NSDictionary<NSString *, id> * _Nonnull)json;
/**
  Serialize object to JSON.
*/
- (NSDictionary<NSString *, id> * _Nonnull)toJson;
@end


/**
  This class represents the metadata information for a record
*/
SWIFT_CLASS("_TtC6Kinvey8Metadata")
@interface Metadata : RealmSwiftObject
/**
  Last Modification Time Key.
*/
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull LmtKey;)
+ (NSString * _Nonnull)LmtKey;
/**
  Entity Creation Time Key.
*/
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull EctKey;)
+ (NSString * _Nonnull)EctKey;
/**
  Authentication Token Key.
*/
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull AuthTokenKey;)
+ (NSString * _Nonnull)AuthTokenKey;
/**
  Last Read Time
*/
@property (nonatomic, copy) NSDate * _Nonnull lastReadTime;
/**
  Last Modification Time.
*/
@property (nonatomic, copy) NSDate * _Nullable lastModifiedTime;
/**
  Entity Creation Time.
*/
@property (nonatomic, copy) NSDate * _Nullable entityCreationTime;
/**
  Authentication Token.
*/
@property (nonatomic, readonly, copy) NSString * _Nullable authtoken;
/**
  Default Constructor.
*/
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/**
  WARNING: This is an internal initializer not intended for public use.
  :nodoc:
*/
- (nonnull instancetype)initWithRealm:(RLMRealm * _Nonnull)realm schema:(RLMObjectSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
/**
  WARNING: This is an internal initializer not intended for public use.
  :nodoc:
*/
- (nonnull instancetype)initWithValue:(id _Nonnull)value schema:(RLMSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
/**
  WARNING: This is an internal initializer not intended for public use.
  :nodoc:
*/
+ (NSArray<NSString *> * _Nonnull)ignoredProperties;
- (nonnull instancetype)initWithValue:(id _Nonnull)value SWIFT_UNAVAILABLE;
@end


/**
  Class used to perform migrations in your local cache.
*/
SWIFT_CLASS_NAMED("Migration")
@interface KNVMigration : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@interface NSString (SWIFT_EXTENSION(Kinvey))
@end


SWIFT_CLASS("_TtC6Kinvey13PasswordReset")
@interface PasswordReset : RealmSwiftObject
@property (nonatomic, readonly, copy) NSString * _Nullable status;
@property (nonatomic, readonly, copy) NSDate * _Nullable lastStateChangeAt;
/**
  Default Constructor.
*/
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithRealm:(RLMRealm * _Nonnull)realm schema:(RLMObjectSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithValue:(id _Nonnull)value schema:(RLMSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithValue:(id _Nonnull)value SWIFT_UNAVAILABLE;
@end


/**
  It holds the progress status of a request.
*/
SWIFT_CLASS_NAMED("ProgressStatus")
@interface KNVProgressStatus : NSObject
/**
  The number of bytes that the request has sent to the server in the request body. (read-only)
*/
@property (nonatomic, readonly) int64_t countOfBytesSent;
/**
  The number of bytes that the request expects to send in the request body. (read-only)
*/
@property (nonatomic, readonly) int64_t countOfBytesExpectedToSend;
/**
  The number of bytes that the request has received from the server in the response body. (read-only)
*/
@property (nonatomic, readonly) int64_t countOfBytesReceived;
/**
  The number of bytes that the request expects to receive in the response body. (read-only)
*/
@property (nonatomic, readonly) int64_t countOfBytesExpectedToReceive;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@class NSPredicate;
@class NSSortDescriptor;

/**
  Class that represents a query including filters and sorts.
*/
SWIFT_CLASS_NAMED("Query")
@interface KNVQuery : NSObject
/**
  Fields to be included in the results of the query.
*/
@property (nonatomic, copy) NSSet<NSString *> * _Nullable fields;
/**
  \code
  NSPredicate
  \endcode used to filter records.
*/
@property (nonatomic, strong) NSPredicate * _Nullable predicate;
/**
  Array of \code
  NSSortDescriptor
  \endcodes used to sort records.
*/
@property (nonatomic, copy) NSArray<NSSortDescriptor *> * _Nullable sortDescriptors;
/**
  Default Constructor.
*/
- (nonnull instancetype)init;
/**
  Constructor using a \code
  NSPredicate
  \endcode to filter records.
*/
- (nonnull instancetype)initWithPredicate:(NSPredicate * _Nonnull)predicate;
/**
  Constructor using an array of \code
  NSSortDescriptor
  \endcodes to sort records.
*/
- (nonnull instancetype)initWithSortDescriptors:(NSArray<NSSortDescriptor *> * _Nonnull)sortDescriptors;
/**
  Constructor using a \code
  NSPredicate
  \endcode to filter records and an array of \code
  NSSortDescriptor
  \endcodes to sort records.
*/
- (nonnull instancetype)initWithPredicate:(NSPredicate * _Nullable)predicate sortDescriptors:(NSArray<NSSortDescriptor *> * _Nullable)sortDescriptors;
/**
  Constructor using a similar way to construct a \code
  NSPredicate
  \endcode.
*/
- (nonnull instancetype)initWithFormat:(NSString * _Nonnull)format argumentArray:(NSArray * _Nullable)argumentArray;
/**
  Copy Constructor.
*/
- (nonnull instancetype)init:(KNVQuery * _Nonnull)query;
/**
  Copy Constructor.
*/
- (nonnull instancetype)init:(KNVQuery * _Nonnull)query :(SWIFT_NOESCAPE void (^ _Nonnull)(KNVQuery * _Nonnull))block;
@end

/**
  Policy that describes how a read operation should perform.
*/
typedef SWIFT_ENUM(NSUInteger, ReadPolicy) {
/**
  Doesn’t hit the network, forcing the data to be read only from the local cache.
*/
  ReadPolicyForceLocal = 0,
/**
  Doesn’t hit the local cache, forcing the data to be read only from the network (backend).
*/
  ReadPolicyForceNetwork = 1,
/**
  Read first from the local cache and then try to get data from the network (backend).
*/
  ReadPolicyBoth = 2,
};


/**
  Protocol that represents a request made to the backend.
*/
SWIFT_PROTOCOL_NAMED("Request")
@protocol KNVRequest
/**
  Indicates if a request still executing or not.
*/
@property (nonatomic, readonly) BOOL executing;
/**
  Indicates if a request was cancelled or not.
*/
@property (nonatomic, readonly) BOOL cancelled;
/**
  Cancels a request in progress.
*/
- (void)cancel;
/**
  Report upload progress of the request
*/
@property (nonatomic, copy) void (^ _Nullable progress)(KNVProgressStatus * _Nonnull);
@end

@class UserMetadata;

/**
  Class that represents an \code
  User
  \endcode.
*/
SWIFT_CLASS_NAMED("User")
@interface __KNVUser : NSObject
/**
  Username Key.
*/
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull PersistableUsernameKey;)
+ (NSString * _Nonnull)PersistableUsernameKey;
/**
  \code
  _id
  \endcode property of the user.
*/
@property (nonatomic, readonly, copy) NSString * _Nonnull userId;
/**
  \code
  _acl
  \endcode property of the user.
*/
@property (nonatomic, readonly, strong) Acl * _Nullable acl;
/**
  \code
  _kmd
  \endcode property of the user.
*/
@property (nonatomic, readonly, strong) UserMetadata * _Nullable metadata;
/**
  \code
  username
  \endcode property of the user.
*/
@property (nonatomic, copy) NSString * _Nullable username;
/**
  \code
  email
  \endcode property of the user.
*/
@property (nonatomic, copy) NSString * _Nullable email;
/**
  Deletes a \code
  User
  \endcode by the \code
  userId
  \endcode property.
*/
+ (id <KNVRequest> _Nonnull)destroyWithUserId:(NSString * _Nonnull)userId hard:(BOOL)hard client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler;
/**
  Deletes the \code
  User
  \endcode.
*/
- (id <KNVRequest> _Nonnull)destroyWithHard:(BOOL)hard client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler;
/**
  Sign in a user and set as a current active user.
*/
+ (id <KNVRequest> _Nonnull)loginWithUsername:(NSString * _Nonnull)username password:(NSString * _Nonnull)password client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(__KNVUser * _Nullable, NSError * _Nullable))completionHandler;
/**
  Sends a request to confirm email address to the specified user.
  The user must have a valid email set in its \code
  email
  \endcode field, on the server, for this to work. The user will receive an email with a time-bound link to a verification web page.
  \param username Username of the user that needs to send the email confirmation

  \param client define the \code
  Client
  \endcode to be used for all the requests for the \code
  DataStore
  \endcode that will be returned. Default value: \code
  Kinvey.sharedClient
  \endcode

  \param completionHandler Completion handler to be called once the response returns from the server

*/
+ (id <KNVRequest> _Nonnull)sendEmailConfirmationForUsername:(NSString * _Nonnull)username client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler;
/**
  Sends a request to confirm email address to the user.
  The user must have a valid email set in its \code
  email
  \endcode field, on the server, for this to work. The user will receive an email with a time-bound link to a verification web page.
  \param client define the \code
  Client
  \endcode to be used for all the requests for the \code
  DataStore
  \endcode that will be returned. Default value: \code
  Kinvey.sharedClient
  \endcode

  \param completionHandler Completion handler to be called once the response returns from the server

*/
- (id <KNVRequest> _Nonnull)sendEmailConfirmation:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler;
+ (id <KNVRequest> _Nonnull)resetPasswordWithUsernameOrEmail:(NSString * _Nonnull)usernameOrEmail client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler;
/**
  Sends an email to the user with a link to reset the password using the \code
  username
  \endcode property.
*/
+ (id <KNVRequest> _Nonnull)resetPasswordWithUsername:(NSString * _Nonnull)username client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler;
/**
  Sends an email to the user with a link to reset the password using the \code
  email
  \endcode property.
*/
+ (id <KNVRequest> _Nonnull)resetPasswordWithEmail:(NSString * _Nonnull)email client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler;
/**
  Sends an email to the user with a link to reset the password.
*/
- (id <KNVRequest> _Nonnull)resetPassword:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler;
/**
  Changes the password for the current user and automatically updates the session with a new valid session.
  \param newPassword A new password for the user

  \param client Define the \code
  Client
  \endcode to be used for all the requests for the \code
  DataStore
  \endcode that will be returned. Default value: \code
  Kinvey.sharedClient
  \endcode

  \param completionHandler Completion handler to be called once the response returns from the server

*/
- (id <KNVRequest> _Nonnull)changePasswordWithNewPassword:(NSString * _Nonnull)newPassword client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(__KNVUser * _Nullable, NSError * _Nullable))completionHandler;
/**
  Sends an email with the username associated with the email provided.
  \param email Email associated with the user

  \param client Define the \code
  Client
  \endcode to be used for all the requests for the \code
  DataStore
  \endcode that will be returned. Default value: \code
  Kinvey.sharedClient
  \endcode

  \param completionHandler Completion handler to be called once the response returns from the server

*/
+ (id <KNVRequest> _Nonnull)forgotUsernameWithEmail:(NSString * _Nonnull)email client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(NSError * _Nullable))completionHandler;
/**
  Checks if a \code
  username
  \endcode already exists or not.
*/
+ (id <KNVRequest> _Nonnull)existsWithUsername:(NSString * _Nonnull)username client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(BOOL, NSError * _Nullable))completionHandler;
/**
  Gets a \code
  User
  \endcode instance using the \code
  userId
  \endcode property.
*/
+ (id <KNVRequest> _Nonnull)getWithUserId:(NSString * _Nonnull)userId client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(__KNVUser * _Nullable, NSError * _Nullable))completionHandler;
/**
  Default Constructor.
*/
- (nonnull instancetype)initWithUserId:(NSString * _Nullable)userId acl:(Acl * _Nullable)acl metadata:(UserMetadata * _Nullable)metadata client:(__KNVClient * _Nonnull)client OBJC_DESIGNATED_INITIALIZER;
/**
  Sign out the current active user.
*/
- (void)logout;
/**
  Creates or updates a \code
  User
  \endcode.
*/
- (id <KNVRequest> _Nonnull)saveWithNewPassword:(NSString * _Nullable)newPassword client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(__KNVUser * _Nullable, NSError * _Nullable))completionHandler;
/**
  Autorization header used for calls that requires a logged \code
  User
  \endcode.
*/
@property (nonatomic, readonly, copy) NSString * _Nullable authorizationHeader;
/**
  Login with MIC using Automated Authorization Grant Flow. We strongly recommend use <a href="http://devcenter.kinvey.com/rest/guides/mobile-identity-connect#authorization-grant">Authorization Code Grant Flow</a> instead of <a href="http://devcenter.kinvey.com/rest/guides/mobile-identity-connect#automated-authorization-grant">Automated Authorization Grant Flow</a> for security reasons.
*/
+ (void)loginWithAuthorizationWithRedirectURI:(NSURL * _Nonnull)redirectURI username:(NSString * _Nonnull)username password:(NSString * _Nonnull)password client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(__KNVUser * _Nullable, NSError * _Nullable))completionHandler;
/**
  Performs a login using the MIC Redirect URL that contains a temporary token.
*/
+ (BOOL)loginWithRedirectURI:(NSURL * _Nonnull)redirectURI micURL:(NSURL * _Nonnull)micURL client:(__KNVClient * _Nonnull)client;
/**
  Presents the MIC View Controller to sign in a user using MIC (Mobile Identity Connect).
*/
+ (void)presentMICViewControllerWithRedirectURI:(NSURL * _Nonnull)redirectURI timeout:(NSTimeInterval)timeout forceUIWebView:(BOOL)forceUIWebView client:(__KNVClient * _Nonnull)client completionHandler:(void (^ _Nullable)(__KNVUser * _Nullable, NSError * _Nullable))completionHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC6Kinvey12UserMetadata")
@interface UserMetadata : Metadata
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithRealm:(RLMRealm * _Nonnull)realm schema:(RLMObjectSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithValue:(id _Nonnull)value schema:(RLMSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6Kinvey10UserStatus")
@interface UserStatus : RealmSwiftObject
@property (nonatomic, readonly, copy) NSString * _Nullable value;
@property (nonatomic, readonly, copy) NSDate * _Nullable lastChange;
/**
  Default Constructor.
*/
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithRealm:(RLMRealm * _Nonnull)realm schema:(RLMObjectSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithValue:(id _Nonnull)value schema:(RLMSchema * _Nonnull)schema OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithValue:(id _Nonnull)value SWIFT_UNAVAILABLE;
@end

/**
  Policy that describes how a write operation should perform.
*/
typedef SWIFT_ENUM(NSUInteger, WritePolicy) {
/**
  Writes in the local cache first and then try to write trought the network (backend).
*/
  WritePolicyLocalThenNetwork = 0,
/**
  Doesn’t hit the network, forcing to write the data only in the local cache.
*/
  WritePolicyForceLocal = 1,
/**
  Doesn’t hit the local cache, forcing to write the data only trought the network (backend).
*/
  WritePolicyForceNetwork = 2,
};

#pragma clang diagnostic pop
