//
//  KCSProtocolTestsKmdLmtMissing.swift
//  KinveyKit
//
//  Created by Victor Barros on 2015-08-21.
//  Copyright (c) 2015 Kinvey. All rights reserved.
//

class KCSProtocolTestsKmdLmtMissing: KCSTestCase {
    
    private class MockURLProtocol : NSURLProtocol {
        
        override class func canInitWithRequest(request: NSURLRequest) -> Bool {
            return true
        }
        
        override class func canonicalRequestForRequest(request: NSURLRequest) -> NSURLRequest {
            return request
        }
        
        override func startLoading() {
            let user = [
                KCSEntityKeyId : "123",
                KCSEntityKeyMetadata : [
                    "ect": "2013-03-14T15:55:00.329Z"
                ],
                "name" : "Kinvey2"
            ]
            let data = try! NSJSONSerialization.dataWithJSONObject(user, options: NSJSONWritingOptions())
            
            let response = NSHTTPURLResponse(
                URL: request.URL!,
                statusCode: 200,
                HTTPVersion: "1.1",
                headerFields: [
                    "Content-Type" : "application/json",
                    "Content-Length" : String(data.length)
                ]
            )!
            client!.URLProtocol(
                self,
                didReceiveResponse: response,
                cacheStoragePolicy: NSURLCacheStoragePolicy.NotAllowed
            )
            client!.URLProtocol(self, didLoadData: data)
            client!.URLProtocolDidFinishLoading(self)
        }
        
        private override func stopLoading() {
        }
        
    }
    
    func testKmdLmtMissing() {
        
        let config = KCSClientConfiguration(
            appKey: "kid_-1WAs8Rh2",
            secret: "2f355bfaa8cb4f7299e914e8e85d8c98",
            options: nil
        )
        KCSClient.sharedClient().initializeWithConfiguration(config)
        
        let collection = KCSCollection(fromString: "company", ofClass: NSMutableDictionary.self)
        let store = KCSLinkedAppdataStore(collection: collection, options: nil)
        
        weak var expectationCreateUser = expectationWithDescription("createUser")
        
        KCSUser.createAutogeneratedUser(
            nil,
            completion: { (user: KCSUser!, error: NSError!, actionResult: KCSUserActionResult) -> Void in
                XCTAssertNotNil(user)
                XCTAssertNil(error)
                
                expectationCreateUser?.fulfill()
            }
        )
        
        waitForExpectationsWithTimeout(30, handler: { (error: NSError?) -> Void in
            expectationCreateUser = nil
        })
        
        KCSURLProtocol.registerClass(MockURLProtocol.self)
        
        weak var expectationSave = expectationWithDescription("save")
        
        store.saveObject(
            [
                "name" : "Kinvey"
            ],
            withCompletionBlock: { (results: [AnyObject]!, error: NSError!) -> Void in
                XCTAssertNotNil(results)
                XCTAssertNil(error)
                
                expectationSave?.fulfill()
            },
            withProgressBlock: nil
        )
        
        waitForExpectationsWithTimeout(30, handler: { (error: NSError?) -> Void in
            expectationSave = nil
        })
    }
    
    override func tearDown() {
        KCSURLProtocol.unregisterClass(MockURLProtocol.self)
        
        super.tearDown()
    }
    
}
